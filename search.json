[{"path":"/AGENTS.html","id":null,"dir":"","previous_headings":"","what":"AGENTS.md ‚Äî Guidance for AI Agents","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"file guides AI code-generation agents working R package.","code":""},{"path":"/AGENTS.html","id":"id_-project-structure","dir":"","previous_headings":"","what":"üß© Project Structure","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"R/ ‚Äî R functions man/ ‚Äî roxygen-generated documentation tests/testthat/ ‚Äî unit tests vignettes/ ‚Äî usage guides (knitr) data/ ‚Äî included datasets .github/workflows/ ‚Äî CI pipelines (R CMD check, linting, pkgdown) _pkgdown.yml ‚Äî site configuration (deployed gh-pages)","code":""},{"path":"/AGENTS.html","id":"id_-coding--style-conventions","dir":"","previous_headings":"","what":"üî® Coding & Style Conventions","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Language, naming, comments, commit messages English . Use roxygen2 (e.g.¬†#' @param, @return) documentation. Follow tidyverse style: 2-space indent, spaces around operators. Functions variable names snake_case.","code":""},{"path":"/AGENTS.html","id":"id_-core-coding-principles","dir":"","previous_headings":"","what":"‚úÖ Core Coding Principles","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Prioritise clarity readability cleverness. Use pure functions clearly defined inputs outputs possible. Follow Single Responsibility Principle ‚Äî function one thing. Avoid code duplication ‚Äî use helper functions factor repeated logic. Use early returns reduce indentation nesting. Avoid deeply nested logic long functions; split logic modular components. Document every exported function consistent roxygen tags. Use @export public functions .","code":""},{"path":"/AGENTS.html","id":"id_-testing","dir":"","previous_headings":"","what":"üìÑ Testing","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"package uses testthat unit testing: Mirror function names tests/testthat/test-*.R. Use test_that(‚Äúdescription‚Äù, { ‚Ä¶ }) blocks. Prefer multiple small, readable expectations. Mock external data randomness needed repeatability.","code":""},{"path":"/AGENTS.html","id":"id_-pull-request-checklist","dir":"","previous_headings":"","what":"üßπ Pull Request Checklist","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"AI-generated pull requests meet criteria: clear, descriptive title summary Related issue referenced (applicable) New tests new modified functions Code passes checks Documentation updated (roxygen /vignette) changes CI, versioning, .github/ files unless requested Branch names opened PRs succinct, concise, clear","code":""},{"path":"/AGENTS.html","id":"id_-build--release-workflow","dir":"","previous_headings":"","what":"üì¶ Build & Release Workflow","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Update documentation: devtools::document() Run tests: devtools::test() Run package checks: devtools::check()","code":""},{"path":"/AGENTS.html","id":"id_-scope","dir":"","previous_headings":"","what":"üî≠ Scope","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Agents must manually edit: man/ .github/ pkgdown/ data/ data-raw/ NAMESPACE DESCRIPTION version number Licence authorship information","code":""},{"path":"/AGENTS.html","id":"id_-tone-and-style-guide-for-vignettes","dir":"","previous_headings":"","what":"üìñ Tone and Style Guide for Vignettes","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Vignettes aim : Friendly accessible ‚Äî Write ‚Äôre explaining concepts informed non-expert colleague. Accurate precise ‚Äî Technical correctness essential. Avoid oversimplifying core ideas. Narrative structure ‚Äî Use clear logical flow: introduce purpose, explain context, walk examples. Example-driven ‚Äî Use realistic, well-commented examples demonstrate concepts. Wherever possible, relate examples plausible use cases.","code":""},{"path":"/AGENTS.html","id":"do","dir":"","previous_headings":"üìñ Tone and Style Guide for Vignettes","what":"Do:","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Use warm, professional tone: ‚ÄúLet‚Äôs explore function works‚Ä¶‚Äù Explain reasoning well code steps. Show intermediate outputs helpful. can use emoji elements help engagement","code":""},{"path":"/AGENTS.html","id":"dont","dir":"","previous_headings":"üìñ Tone and Style Guide for Vignettes","what":"Don‚Äôt:","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Assume deep prior knowledge package internals. Use overly casual language. Skip steps leave important arguments unexplained.","code":""},{"path":"/AGENTS.html","id":"voice-checklist","dir":"","previous_headings":"üìñ Tone and Style Guide for Vignettes","what":"Voice checklist:","title":"AGENTS.md ‚Äî Guidance for AI Agents","text":"Conversational professional unexplained acronyms jargon Every code block context interpretation reader feel guided confident, testedTone Style Guide Vignettes","code":""},{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 MRC Centre Outbreak Analysis Modelling Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pete Winskill. Author, maintainer. Robert Verity. Author.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Winskill P, Verity R (2025). weave: Health facility malaria data interpolation. R package version 0.1.1.","code":"@Manual{,   title = {weave: Health facility malaria data interpolation},   author = {Pete Winskill and Robert Verity},   year = {2025},   note = {R package version 0.1.1}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Health facility malaria data interpolation","text":"can install development version weave GitHub :","code":"# install.packages(\"pak\") pak::pak(\"mrc-ide/weave\")"},{"path":"/reference/Amv.html","id":null,"dir":"Reference","previous_headings":"","what":"Observed-system matvec: (S K S^T + diag(noise)) v ‚Äî Amv","title":"Observed-system matvec: (S K S^T + diag(noise)) v ‚Äî Amv","text":"Takes observed-length vector applies GP covariance plus per-observation noise (nugget), without building big matrices.","code":""},{"path":"/reference/Amv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observed-system matvec: (S K S^T + diag(noise)) v ‚Äî Amv","text":"","code":"Amv(v, obs_idx, N, space_mat, time_mat, noise_var)"},{"path":"/reference/Amv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observed-system matvec: (S K S^T + diag(noise)) v ‚Äî Amv","text":"v Numeric vector length \\(m\\) (observed entries). obs_idx Integer indices observed entries full vector. N Total length full vector. space_mat Spatial kernel matrix. time_mat Temporal kernel matrix. noise_var Scalar length-\\(m\\) numeric nugget observed scale.","code":""},{"path":"/reference/Amv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observed-system matvec: (S K S^T + diag(noise)) v ‚Äî Amv","text":"numeric vector length \\(m\\), equal \\((S K S^\\top + D)v\\).","code":""},{"path":"/reference/Amv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Observed-system matvec: (S K S^T + diag(noise)) v ‚Äî Amv","text":"Technically: \\(K = \\mathrm{space}\\,\\otimes\\,\\mathrm{time}\\), returns $$S\\,K\\,S^{\\mathsf T}\\,v \\;+\\; \\operatorname{diag}(\\sigma^2)\\,v,$$ .e., observed block GP plus diagonal nugget. Implemented matrix-free kron_mv(with_nas(v, obs_idx, N), space_mat, time_mat)[obs_idx] + noise_var * v, \\(S^{\\mathsf T}\\) ‚Äúscatters‚Äô‚Äô full vector \\(\\sigma^2\\) denotes per-observation noise.","code":""},{"path":"/reference/M_inv.html","id":null,"dir":"Reference","previous_headings":"","what":"Diagonal (Jacobi) preconditioner application ‚Äî M_inv","title":"Diagonal (Jacobi) preconditioner application ‚Äî M_inv","text":"Divides approximation diagonal system, makes iterative solver converge faster.","code":""},{"path":"/reference/M_inv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diagonal (Jacobi) preconditioner application ‚Äî M_inv","text":"","code":"M_inv(v, kdiag_full, obs_idx, noise_var)"},{"path":"/reference/M_inv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diagonal (Jacobi) preconditioner application ‚Äî M_inv","text":"v Numeric vector precondition (length \\(m\\)). kdiag_full Vector \\(\\mathrm{diag}(K)\\) length \\(N\\) (typically `.vector(kronecker(diag(space), diag(time)))`). obs_idx Integer indices observed entries full vector. noise_var Scalar length-\\(m\\) numeric nugget add diagonal.","code":""},{"path":"/reference/M_inv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diagonal (Jacobi) preconditioner application ‚Äî M_inv","text":"numeric vector length \\(m\\): elementwise `v / (diagA + 1e-12)`.","code":""},{"path":"/reference/M_inv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diagonal (Jacobi) preconditioner application ‚Äî M_inv","text":"Technically: applies \\(M^{-1} v \\approx v / \\mathrm{diag}()\\), \\(= S K S^\\top + \\mathrm{diag}(\\text{noise})\\) \\(\\mathrm{diag}(K) = \\mathrm{diag}(space) \\otimes \\mathrm{diag}(time)\\).","code":""},{"path":"/reference/fill_vector.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill observed values into a full vector ‚Äî fill_vector","title":"Fill observed values into a full vector ‚Äî fill_vector","text":"Put observed entries back full-length vector, filling missing positions zeros.","code":""},{"path":"/reference/fill_vector.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill observed values into a full vector ‚Äî fill_vector","text":"","code":"fill_vector(x_obs, obs_idx, N)"},{"path":"/reference/fill_vector.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill observed values into a full vector ‚Äî fill_vector","text":"x_obs Numeric vector observed values (length \\(m\\)). obs_idx Integer indices (length \\(m\\)) observed positions full vector. N Total length full vector.","code":""},{"path":"/reference/fill_vector.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill observed values into a full vector ‚Äî fill_vector","text":"numeric vector length `N` `x_obs` scattered `obs_idx`.","code":""},{"path":"/reference/get_spatial_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise spatial distances ‚Äî get_spatial_distance","title":"Pairwise spatial distances ‚Äî get_spatial_distance","text":"Computes pairwise Euclidean distances locations.","code":""},{"path":"/reference/get_spatial_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise spatial distances ‚Äî get_spatial_distance","text":"","code":"get_spatial_distance(coordinates)"},{"path":"/reference/get_spatial_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise spatial distances ‚Äî get_spatial_distance","text":"coordinates data frame columns `lon` `lat` degrees.","code":""},{"path":"/reference/get_spatial_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise spatial distances ‚Äî get_spatial_distance","text":"symmetric matrix pairwise spatial distances.","code":""},{"path":"/reference/get_temporal_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Pairwise temporal distances ‚Äî get_temporal_distance","title":"Pairwise temporal distances ‚Äî get_temporal_distance","text":"Computes pairwise distances time points.","code":""},{"path":"/reference/get_temporal_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pairwise temporal distances ‚Äî get_temporal_distance","text":"","code":"get_temporal_distance(times)"},{"path":"/reference/get_temporal_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pairwise temporal distances ‚Äî get_temporal_distance","text":"times numeric vector time indices.","code":""},{"path":"/reference/get_temporal_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pairwise temporal distances ‚Äî get_temporal_distance","text":"symmetric matrix pairwise temporal distances.","code":""},{"path":"/reference/kron_mv.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast Kronecker‚Äìproduct matrix‚Äìvector multiply (times vary fastest) ‚Äî kron_mv","title":"Fast Kronecker‚Äìproduct matrix‚Äìvector multiply (times vary fastest) ‚Äî kron_mv","text":"plain terms: multiplies big covariance `K = space ‚äó time` vector without ever forming `K`, using reshape‚Äìmultiply‚Äìreshape trick.","code":""},{"path":"/reference/kron_mv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast Kronecker‚Äìproduct matrix‚Äìvector multiply (times vary fastest) ‚Äî kron_mv","text":"","code":"kron_mv(v, space, time)"},{"path":"/reference/kron_mv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast Kronecker‚Äìproduct matrix‚Äìvector multiply (times vary fastest) ‚Äî kron_mv","text":"v Numeric vector length `nrow(space) * nrow(time)`, ordered times varying fastest within site. space Spatial kernel matrix (size \\(n \\times n\\)). time Temporal kernel matrix (size \\(nt \\times nt\\)).","code":""},{"path":"/reference/kron_mv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast Kronecker‚Äìproduct matrix‚Äìvector multiply (times vary fastest) ‚Äî kron_mv","text":"numeric vector length `v`.","code":""},{"path":"/reference/kron_mv.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fast Kronecker‚Äìproduct matrix‚Äìvector multiply (times vary fastest) ‚Äî kron_mv","text":"Technically: \\(v = \\mathrm{vec}(X^\\top)\\) `times` varying fastest, computes \\((space \\otimes time)\\,v = \\mathrm{vec}\\!\\big((space\\,X\\,time^\\top)^\\top\\big)\\).","code":""},{"path":"/reference/llh.html","id":null,"dir":"Reference","previous_headings":"","what":"Hessian of the (log posterior) for Poisson log-Gaussian model ‚Äî llh","title":"Hessian of the (log posterior) for Poisson log-Gaussian model ‚Äî llh","text":"Builds curvature matrix used uncertainty‚Äîcombining GP prior Poisson likelihood‚Äîgiven latent vector `f`.","code":""},{"path":"/reference/llh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hessian of the (log posterior) for Poisson log-Gaussian model ‚Äî llh","text":"","code":"llh(f, dist_k_inv, time_k_inv)"},{"path":"/reference/llh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Hessian of the (log posterior) for Poisson log-Gaussian model ‚Äî llh","text":"f Numeric vector latent values (length \\(n \\times nt\\)). dist_k_inv Inverse spatial kernel (precision) matrix. time_k_inv Inverse temporal kernel (precision) matrix.","code":""},{"path":"/reference/llh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Hessian of the (log posterior) for Poisson log-Gaussian model ‚Äî llh","text":"dense square matrix \\(H\\) size `length(f)` √ó `length(f)`.","code":""},{"path":"/reference/llh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Hessian of the (log posterior) for Poisson log-Gaussian model ‚Äî llh","text":"Technically: returns Hessian $$H = -\\Sigma^{-1} - \\mathrm{diag}(\\exp(f))$$ \\(\\Sigma^{-1} = \\text{dist\\_k\\_inv} \\otimes \\text{time\\_k\\_inv}\\). Hessian log posterior (negative definite).","code":""},{"path":"/reference/pcg.html","id":null,"dir":"Reference","previous_headings":"","what":"Preconditioned Conjugate Gradient (PCG) solver for the observed system ‚Äî pcg","title":"Preconditioned Conjugate Gradient (PCG) solver for the observed system ‚Äî pcg","text":"plain terms: solves big linear system gives GP weights using matrix‚Äìvector products‚Äîhuge matrices, explicit inverse.","code":""},{"path":"/reference/pcg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Preconditioned Conjugate Gradient (PCG) solver for the observed system ‚Äî pcg","text":"","code":"pcg(   b,   obs_idx,   N,   space_mat,   time_mat,   noise_var,   kdiag_full,   tol = 1e-08,   maxit = 10000 )"},{"path":"/reference/pcg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Preconditioned Conjugate Gradient (PCG) solver for the observed system ‚Äî pcg","text":"b Right-hand side vector (observed length \\(m\\)). obs_idx Integer indices observed entries full vector. N Total length full vector. space_mat Spatial kernel matrix. time_mat Temporal kernel matrix. noise_var Scalar length-\\(m\\) nugget observed scale. kdiag_full Vector \\(\\mathrm{diag}(K)\\) length \\(N\\). tol Relative residual tolerance convergence (default `1e-8`). maxit Maximum number iterations (default `10000`).","code":""},{"path":"/reference/pcg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Preconditioned Conjugate Gradient (PCG) solver for the observed system ‚Äî pcg","text":"Numeric solution vector `x` length \\(m\\).","code":""},{"path":"/reference/pcg.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Preconditioned Conjugate Gradient (PCG) solver for the observed system ‚Äî pcg","text":"Technically: solves \\((S K S^\\top + \\mathrm{diag}(\\text{noise}))\\,x = b\\) PCG, using `Amv` matrix‚Äìvector products `M_inv` Jacobi preconditioner. Stops relative residual falls `tol` `maxit` iterations (issues warning `maxit`).","code":""},{"path":"/reference/periodic_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Periodic kernel ‚Äî periodic_kernel","title":"Periodic kernel ‚Äî periodic_kernel","text":"Computes periodic kernel distance vector matrix.","code":""},{"path":"/reference/periodic_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Periodic kernel ‚Äî periodic_kernel","text":"","code":"periodic_kernel(x, alpha, period)"},{"path":"/reference/periodic_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Periodic kernel ‚Äî periodic_kernel","text":"x numeric vector matrix distances. alpha positive numeric scalar controlling amplitude. period positive numeric scalar giving period.","code":""},{"path":"/reference/periodic_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Periodic kernel ‚Äî periodic_kernel","text":"numeric vector matrix periodic kernel values.","code":""},{"path":"/reference/quick_mvnorm.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick multivariate normal samples over two dimensions ‚Äî quick_mvnorm","title":"Quick multivariate normal samples over two dimensions ‚Äî quick_mvnorm","text":"equivalent estimating full spatio-temporal covariance matrix sampling multivariate normal distribution: full_k <- kronecker(dist_k, time_k) f  <- mvrnorm(1, rep(0, n * nt), full_k)","code":""},{"path":"/reference/quick_mvnorm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick multivariate normal samples over two dimensions ‚Äî quick_mvnorm","text":"","code":"quick_mvnorm(space, time)"},{"path":"/reference/quick_mvnorm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick multivariate normal samples over two dimensions ‚Äî quick_mvnorm","text":"space Space kernel matrix time Time kernel matrix","code":""},{"path":"/reference/rbf_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Radial basis function kernel ‚Äî rbf_kernel","title":"Radial basis function kernel ‚Äî rbf_kernel","text":"Computes radial basis function (RBF) kernel distance vector matrix.","code":""},{"path":"/reference/rbf_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Radial basis function kernel ‚Äî rbf_kernel","text":"","code":"rbf_kernel(x, theta)"},{"path":"/reference/rbf_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Radial basis function kernel ‚Äî rbf_kernel","text":"x numeric vector matrix distances. theta positive numeric scalar giving length-scale parameter.","code":""},{"path":"/reference/rbf_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Radial basis function kernel ‚Äî rbf_kernel","text":"numeric vector matrix RBF kernel values.","code":""},{"path":"/reference/regularise.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a small ridge to a square matrix ‚Äî regularise","title":"Add a small ridge to a square matrix ‚Äî regularise","text":"plain terms: adds tiny value diagonal matrix better-behaved numerically (e.g., invertible Cholesky-able).","code":""},{"path":"/reference/regularise.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a small ridge to a square matrix ‚Äî regularise","text":"","code":"regularise(x, lambda = 1e-05)"},{"path":"/reference/regularise.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a small ridge to a square matrix ‚Äî regularise","text":"x square numeric matrix. lambda Non-negative ridge (diagonal) value add. Default `1e-5`.","code":""},{"path":"/reference/regularise.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a small ridge to a square matrix ‚Äî regularise","text":"matrix size `x` `lambda` added diagonal.","code":""},{"path":"/reference/regularise.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a small ridge to a square matrix ‚Äî regularise","text":"Technically: returns \\(X + \\lambda \\), improves condition number ensures positive definiteness \\(\\lambda > 0\\).","code":""},{"path":"/reference/space_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the spatial kernel ‚Äî space_kernel","title":"Estimate the spatial kernel ‚Äî space_kernel","text":"Builds spatial covariance matrix using RBF kernel nugget term numerical stability.","code":""},{"path":"/reference/space_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the spatial kernel ‚Äî space_kernel","text":"","code":"space_kernel(coordinates, length_scale, nugget = 1e-09)"},{"path":"/reference/space_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the spatial kernel ‚Äî space_kernel","text":"coordinates data frame columns `lon` `lat` degrees. length_scale positive numeric scalar spatial length scale. nugget non-negative numeric scalar added diagonal numerical stability.","code":""},{"path":"/reference/space_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the spatial kernel ‚Äî space_kernel","text":"positive-definite matrix representing spatial covariance.","code":""},{"path":"/reference/tidyeval.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy eval helpers ‚Äî tidyeval","title":"Tidy eval helpers ‚Äî tidyeval","text":"page lists tidy eval tools reexported package rlang. learn using tidy eval scripts packages high level, see dplyr programming vignette ggplot2 packages vignette. Metaprogramming section Advanced R may also useful deeper dive. tidy eval operators {{, !!, !!! syntactic constructs specially interpreted tidy eval functions. mostly need {{, !! !!! advanced operators use simple cases. curly-curly operator {{ allows tunnel data-variables passed function arguments inside tidy eval functions. {{ designed individual arguments. pass multiple arguments contained dots, use ... normal way.   enquo() enquos() delay execution one several function arguments. former returns single expression, latter returns list expressions. defused, expressions longer evaluate . must injected back evaluation context !! (single expression) !!! (list expressions).   simple case, code equivalent usage {{ ... . Defusing enquo() enquos() needed complex cases, instance need inspect modify expressions way. .data pronoun object represents current slice data. variable name string, use .data pronoun subset variable [[.   Another tidy eval operator :=. makes possible use glue curly-curly syntax LHS =. technical reasons, R language support complex expressions left =, use := workaround.   Many tidy eval functions like dplyr::mutate() dplyr::summarise() give automatic name unnamed inputs. need create sort automatic names , use as_label(). instance, glue-tunnelling syntax can reproduced manually :   Expressions defused enquo() (tunnelled {{) need simple column names, can arbitrarily complex. as_label() handles cases gracefully. code assumes simple column name, use as_name() instead. safer throws error input name expected.","code":"my_function <- function(data, var, ...) {   data %>%     group_by(...) %>%     summarise(mean = mean({{ var }})) } my_function <- function(data, var, ...) {   # Defuse   var <- enquo(var)   dots <- enquos(...)    # Inject   data %>%     group_by(!!!dots) %>%     summarise(mean = mean(!!var)) } my_var <- \"disp\" mtcars %>% summarise(mean = mean(.data[[my_var]])) my_function <- function(data, var, suffix = \"foo\") {   # Use `{{` to tunnel function arguments and the usual glue   # operator `{` to interpolate plain strings.   data %>%     summarise(\"{{ var }}_mean_{suffix}\" := mean({{ var }})) } my_function <- function(data, var, suffix = \"foo\") {   var <- enquo(var)   prefix <- as_label(var)   data %>%     summarise(\"{prefix}_mean_{suffix}\" := mean(!!var)) }"},{"path":"/reference/time_kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate the temporal kernel ‚Äî time_kernel","title":"Estimate the temporal kernel ‚Äî time_kernel","text":"Builds temporal covariance matrix combining periodic long-term RBF components nugget term numerical stability.","code":""},{"path":"/reference/time_kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate the temporal kernel ‚Äî time_kernel","text":"","code":"time_kernel(   times,   periodic_scale,   long_term_scale,   nugget = 1e-09,   period = 52 )"},{"path":"/reference/time_kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate the temporal kernel ‚Äî time_kernel","text":"times numeric vector time indices. periodic_scale positive numeric scalar controlling periodic variation. long_term_scale positive numeric scalar long-term length scale. nugget non-negative numeric scalar added diagonal numerical stability. period positive numeric scalar giving period seasonal component.","code":""},{"path":"/reference/time_kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate the temporal kernel ‚Äî time_kernel","text":"positive-definite matrix representing temporal covariance.","code":""}]
